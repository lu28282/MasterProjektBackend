package com.example.MasterProjekt.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.Set;

import com.example.MasterProjekt.model.Cpe;
import com.example.MasterProjekt.model.Vulnerability;
import com.example.MasterProjekt.repository.VulnerabilityRepository;

import org.apache.maven.artifact.versioning.DefaultArtifactVersion;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class VulnerabilityService {

    private VulnerabilityRepository vulnerabilityRepository;

    @Autowired
    public VulnerabilityService(VulnerabilityRepository vulnerabilityRepository) {
        this.vulnerabilityRepository = vulnerabilityRepository;
    }

    public List<Vulnerability> getAllVulnerabilities() {
        return vulnerabilityRepository.findAll();
    }

    public List<Vulnerability> getAllVulnerabilitiesBySoftwareAndVersion(String software, String version) {
        List<Vulnerability> result = new ArrayList<Vulnerability>();
        List<Vulnerability> allVulnerabilities = vulnerabilityRepository.findAll();

        for (Vulnerability vulnerability : allVulnerabilities) {
            Optional<Vulnerability> vulnerabilityOpt = checkIfCpeSoftwareMatches(vulnerability, software, version);
            if (!vulnerabilityOpt.isEmpty()) {
                result.add(vulnerabilityOpt.get());
            }
        }
        return result;
    }

    private Optional<Vulnerability> checkIfCpeSoftwareMatches(Vulnerability vulnerability, String software,
            String version) {
        Set<Cpe> cpeSet = vulnerability.getCpeSet();
        for (Cpe cpe : cpeSet) {
            if (cpe.getSoftware().equalsIgnoreCase(software)) {
                if (cpeMatchesVersions(cpe, version)) {
                    return Optional.of(vulnerability);
                }
            }
        }
        return Optional.empty();
    }

    private boolean cpeMatchesVersions(Cpe cpe, String version) {
        boolean matchesVersions = false;
        String versionStartIncluding = cpe.getVersionStartIncluding();
        String versionStartExcluding = cpe.getVersionStartExcluding();
        String versionEndIncluding = cpe.getVersionEndIncluding();
        String versionEndExcluding = cpe.getVersionEndExcluding();
        DefaultArtifactVersion googleVersion = new DefaultArtifactVersion(version);
        // Version matching
        if (!(cpe.getVersion() == null)) {
            DefaultArtifactVersion cpeVersion = new DefaultArtifactVersion(cpe.getVersion());
            if (googleVersion.compareTo(cpeVersion) == 0) {
                matchesVersions = true;
            }
        } // StartIncluding + EndExcluding
        else if (!(versionStartIncluding == null) && !(versionEndExcluding == null) && !matchesVersions) {
            DefaultArtifactVersion cpeVersionStartIncluding = new DefaultArtifactVersion(versionStartIncluding);
            DefaultArtifactVersion cpeVersionEndExcluding = new DefaultArtifactVersion(versionEndExcluding);
            if (googleVersion.compareTo(cpeVersionStartIncluding) == 0
                    || googleVersion.compareTo(cpeVersionStartIncluding) > 0) {
                if (googleVersion.compareTo(cpeVersionEndExcluding) < 0) {
                    matchesVersions = true;
                }
            }
        } // StartIncluding + EndIncluding
        else if (!(versionStartIncluding == null) && !(versionEndIncluding == null) && !matchesVersions) {
            DefaultArtifactVersion cpeVersionStartIncluding = new DefaultArtifactVersion(versionStartIncluding);
            DefaultArtifactVersion cpeVersionEndIncluding = new DefaultArtifactVersion(versionEndIncluding);
            if (googleVersion.compareTo(cpeVersionStartIncluding) == 0
                    || googleVersion.compareTo(cpeVersionStartIncluding) > 0) {
                if (googleVersion.compareTo(cpeVersionEndIncluding) == 0
                        || googleVersion.compareTo(cpeVersionEndIncluding) < 0) {
                    matchesVersions = true;
                }
            }
        } // StartExcluding + EndIncluding
        else if (!(versionStartExcluding == null) && !(versionEndIncluding == null) && !matchesVersions) {
            DefaultArtifactVersion cpeVersionStartExcluding = new DefaultArtifactVersion(versionStartExcluding);
            DefaultArtifactVersion cpeVersionEndIncluding = new DefaultArtifactVersion(versionEndIncluding);
            if (googleVersion.compareTo(cpeVersionStartExcluding) > 0) {
                if (googleVersion.compareTo(cpeVersionEndIncluding) == 0
                        || googleVersion.compareTo(cpeVersionEndIncluding) < 0) {
                    matchesVersions = true;
                }
            }
        } // StartExcluding + EndExcluding
        else if (!(versionStartExcluding == null) && !(versionEndExcluding == null) && !matchesVersions) {
            DefaultArtifactVersion cpeVersionStartExcluding = new DefaultArtifactVersion(versionStartExcluding);
            DefaultArtifactVersion cpeVersionEndExcluding = new DefaultArtifactVersion(versionEndExcluding);
            if (googleVersion.compareTo(cpeVersionStartExcluding) > 0) {
                if (googleVersion.compareTo(cpeVersionEndExcluding) < 0) {
                    matchesVersions = true;
                }
            }
        } // StartIncluding
        else if (!(versionStartIncluding == null) && !matchesVersions) {
            DefaultArtifactVersion cpeVersionStartIncluding = new DefaultArtifactVersion(versionStartIncluding);
            if (googleVersion.compareTo(cpeVersionStartIncluding) == 0
                    || googleVersion.compareTo(cpeVersionStartIncluding) > 0) {
                matchesVersions = true;
            }
        } // StartExcluding
        else if (!(versionStartExcluding == null) && !matchesVersions) {
            DefaultArtifactVersion cpeVersionStartExcluding = new DefaultArtifactVersion(versionStartExcluding);
            if (googleVersion.compareTo(cpeVersionStartExcluding) > 0) {
                matchesVersions = true;
            }
        } // EndIncluding
        else if (!(versionEndIncluding == null) && !matchesVersions) {
            DefaultArtifactVersion cpeVersionEndIncluding = new DefaultArtifactVersion(versionEndIncluding);
            if (googleVersion.compareTo(cpeVersionEndIncluding) == 0
                    || googleVersion.compareTo(cpeVersionEndIncluding) < 0) {
                matchesVersions = true;
            }
        } // EndExcluding
        else if (!(versionEndExcluding == null) && !matchesVersions) {
            DefaultArtifactVersion cpeVersionEndExcluding = new DefaultArtifactVersion(versionEndExcluding);
            if (googleVersion.compareTo(cpeVersionEndExcluding) < 0) {
                matchesVersions = true;
            }
        }

        return matchesVersions;
    }
}
